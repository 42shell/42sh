# async subshell
cat && sleep 100 & sleep .4

# assert there are a subshell and a cat process
ps --ppid $$,$! -o state,comm; sleep .4

# kill the cat process
pkill -9 -P $! cat 2>&/dev/null; sleep .4

# assert subshell still there and there is no sleep process
ps --ppid $$,$! -o state,comm; sleep .4

# send -CONT to the subshell to terminate it
kill -CONT $! 2>&/dev/null; sleep .4

# assert subshell and cat processes have disappeared
ps --ppid $$,$! -o state,comm; sleep .4

###########################################################################################
###########################################################################################

# async brace group
{ yes >/dev/null | sleep 300; } & sleep .4

# assert all processes are there (subshell, yes, sleep)
ps --ppid $$,$! -o state,comm; sleep .4

# kill the yes process
pkill -9 -g $! yes 2>&/dev/null; sleep .4

# assert sleep process and no yes process
ps --ppid $$,$! -o state,comm; sleep .4

# kill the sleep process
pkill -9 -g $! sleep 2>&/dev/null; sleep .4

# assert no subshell and no sleep
ps --ppid $$,$! -o state,comm; sleep .4

###########################################################################################
# async in subshells
###########################################################################################

# subshell forks cat asynchronously with stdin=/dev/null, cat exit immediately
(cat & sleep 100) & sleep .4
ps --ppid $$,$! -o state,comm; sleep .4
pkill -9 -g $! 2>&/dev/null; sleep .4

# assert sleep processes running
(cat & sleep 100 & sleep 200) & sleep .4
ps --ppid $$,$! -o state,comm; sleep .4
pkill -9 -g $! 2>&/dev/null; sleep .4

###########################################################################################
###########################################################################################

# subshell in subshell
# the subshell forks another subshell in async to run the &&. The child subshell
# shall wait for the command to finish.
(true && yes >/dev/null & sleep 200) & sleep .4

# assert there are 2 subshells and 2 sleep processes
PIDS=$(pgrep -g $! | tr '\n' ',' | sed 's/,$/\n/'); sleep .4; ps --pid $PIDS -o state,comm; sleep .4

# kill the sleep process
pkill -9 -g $! sleep 2>&/dev/null; sleep .4

# assert the parent subshell and sleep have exited, but child subshell and yes still running
ps --pid $PIDS -o state,comm; sleep .4

# kill the yes process
pkill -9 -g $! yes 2>&/dev/null; sleep .4

# assert all processes have finished
ps --pid $PIDS -o state,comm; sleep .4
ps --ppid $$,$! -o state,comm; sleep .4
